name: CI

on:
  
  push:
  workflow_dispatch:

jobs:
  
  BuildAndTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: Unit Test
        run: |
          chmod +x gradlew
          ./gradlew jacocoTestCoverageVerification
      
      - name: SonarCloud Code Review
        run: |
          chmod +x gradlew
          ./gradlew sonar -Dsonar.token=${{ secrets.TOKEN_SONARCLOUD }}

      - name: SonarCloud Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_SONARCLOUD }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          scanMetadataReportFile: build/sonar/report-task.txt

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
              registry: gcr.io
              username: _json_key
              password: ${{ secrets.SA_GCP_CR }}

#      - name: Docker Login
#        uses: docker/login-action@v2.2.0
#        with: 
#            username: ${{ secrets.DOCKER_USERNAME }}
#            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Copia de Jar a Raiz de proyecto
        run: |
            cp $GITHUB_WORKSPACE/build/libs/testing-web-0.0.1-SNAPSHOT.jar .
            chmod 777 testing-web-0.0.1-SNAPSHOT.jar
            ls -lt 
        
      - name: Docker Build
        run: | 
            docker build --tag gcr.io/suracrossit-2/testing-web:latest .
            docker images
  
      - name: Docker Push
        run: |
            docker push gcr.io/suracrossit-2/testing-web 
      

      - uses: 'google-github-actions/auth@v2'
        with:
#          workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
#          service_account: 'mzoffoli-diplomado-usach@suracrossit-2.iam.gserviceaccount.com'
          credentials_json: ${{ secrets.SA_GCP_CR }}
      
      - id: 'Deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          image: 'gcr.io/suracrossit-2/testing-web'
          service: 'testing-web-MZOFFOLI'

#      - name: Deploy on C.R.
#        run: |
#            gcloud --version
  
#  deploy: 
#    runs-on: self-hosted 
#    needs: pipeline
#    steps: 
#
#    - uses: actions/checkout@v3
#    
#    - name: Deploy to Minikube
#      run: |
#        kubectl apply -f deployment.yml
